name: CI/CD Pipeline

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: leetcode_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install dependencies
      working-directory: ./server
      run: go mod download

    - name: Create .env.test file
      working-directory: ./server
      run: |
        cat << EOF > .env.test
        DB_HOST=localhost
        DB_PORT=5432
        DB_USER=postgres
        DB_PASSWORD=postgres
        DB_NAME=leetcode_test
        EOF
        cat .env.test

    - name: Run migrations and seed data
      working-directory: ./server
      run: |
        # Install migration tool
        go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
        
        # Run migrations
        export POSTGRESQL_URL="postgres://postgres:postgres@localhost:5432/leetcode_test?sslmode=disable"
        migrate -database ${POSTGRESQL_URL} -path migrations up
        
        # Seed test problems data
        PGPASSWORD=postgres psql -h localhost -U postgres -d leetcode_test -f migrations/seed_test_problems.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d leetcode_test -f migrations/seed_solutions.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d leetcode_test -f migrations/seed_problems_topic.sql # Seed problems_topic data

    - name: Run tests
      working-directory: ./server
      run: go test ./... -v -p 1
      env:
        DATABASE_URL: "postgres://postgres:postgres@localhost:5432/leetcode_test?sslmode=disable"
        TEST_DATABASE_URL: "postgres://postgres:postgres@localhost:5432/leetcode_test?sslmode=disable"

  build-and-push:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=sha,format=short
          type=ref,event=branch
          latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./server
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
