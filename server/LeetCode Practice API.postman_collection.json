{
	"info": {
		"_postman_id": "8f066231-e5d5-46d7-88a7-0f8e549719ec",
		"name": "LeetCode Practice API",
		"description": "API endpoints for the LeetCode Practice application with standardized response format",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40296181"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check the API server health status"
					},
					"response": [
						{
							"name": "Health Check Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/health",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"status\": \"ok\"\n  },\n  \"meta\": {\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"leetcode_username\": \"leetcode_testuser\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": [
						{
							"name": "Register User Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"testuser\",\n  \"leetcode_username\": \"leetcode_testuser\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/users/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": 1,\n    \"username\": \"testuser\",\n    \"leetcode_username\": \"leetcode_testuser\",\n    \"created_at\": \"2025-03-11T12:34:56Z\"\n  },\n  \"meta\": {\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						},
						{
							"name": "Register User Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"\",\n  \"leetcode_username\": \"leetcode_testuser\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/users/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": null,\n  \"meta\": {\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": [\n    {\n      \"code\": \"validation_error\",\n      \"message\": \"Missing username or leetcode username\",\n      \"field\": \"username_or_leetcode_username\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Problems",
			"item": [
				{
					"name": "Get Problem By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/problems/by-id?id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"problems",
								"by-id"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Get a problem by its internal ID"
					},
					"response": [
						{
							"name": "Get Problem By ID Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/problems?id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"problems"
									],
									"query": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": 1,\n    \"frontend_id\": 1,\n    \"title\": \"Two Sum\",\n    \"title_slug\": \"two-sum\",\n    \"difficulty\": \"Easy\",\n    \"is_paid_only\": false,\n    \"content\": \"<p>Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.</p>\",\n    \"topic_tags\": [\n      {\n        \"name\": \"Array\",\n        \"slug\": \"array\"\n      },\n      {\n        \"name\": \"Hash Table\",\n        \"slug\": \"hash-table\"\n      }\n    ],\n    \"example_testcases\": \"[2,7,11,15]\\n9\",\n    \"similar_questions\": [],\n    \"created_at\": \"2025-03-11T12:34:56Z\"\n  },\n  \"meta\": {\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Get Problem By Frontend ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/problems?frontend_id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"problems"
							],
							"query": [
								{
									"key": "frontend_id",
									"value": "1"
								}
							]
						},
						"description": "Get a problem by its LeetCode frontend ID"
					},
					"response": []
				},
				{
					"name": "Get Problem By Slug",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/problems/by-slug?slug=two-sum",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"problems",
								"by-slug"
							],
							"query": [
								{
									"key": "slug",
									"value": "two-sum"
								}
							]
						},
						"description": "Get a problem by its slug"
					},
					"response": []
				},
				{
					"name": "Get Problem List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/problems?limit=10&offset=0&difficulty=Easy&order_by=frontend_id&order_dir=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"problems"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "difficulty",
									"value": "Easy"
								},
								{
									"key": "order_by",
									"value": "frontend_id"
								},
								{
									"key": "order_dir",
									"value": "asc"
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "",
									"disabled": true
								},
								{
									"key": "paid_only",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get a list of problems with filtering and pagination"
					},
					"response": [
						{
							"name": "Get Problem List Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/problems?limit=10&offset=0&difficulty=Easy&order_by=frontend_id&order_dir=asc",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"problems"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "difficulty",
											"value": "Easy"
										},
										{
											"key": "order_by",
											"value": "frontend_id"
										},
										{
											"key": "order_dir",
											"value": "asc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"frontend_id\": 1,\n      \"title\": \"Two Sum\",\n      \"title_slug\": \"two-sum\",\n      \"difficulty\": \"Easy\",\n      \"is_paid_only\": false,\n      \"content\": \"<p>Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.</p>\",\n      \"topic_tags\": [\n        {\n          \"name\": \"Array\",\n          \"slug\": \"array\"\n        },\n        {\n          \"name\": \"Hash Table\",\n          \"slug\": \"hash-table\"\n        }\n      ],\n      \"example_testcases\": \"[2,7,11,15]\\n9\",\n      \"similar_questions\": [],\n      \"created_at\": \"2025-03-11T12:34:56Z\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 100,\n      \"page\": 1,\n      \"per_page\": 10\n    },\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Submissions",
			"item": [
				{
					"name": "Get Submissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/submissions?user_id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"submissions"
							],
							"query": [
								{
									"key": "user_id",
									"value": "1"
								}
							]
						},
						"description": "Get submissions for a user"
					},
					"response": [
						{
							"name": "Get Submissions Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/submissions?user_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"submissions"
									],
									"query": [
										{
											"key": "user_id",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"internal-user-123abc\",\n      \"user_id\": 1,\n      \"title\": \"Two Sum\",\n      \"title_slug\": \"two-sum\",\n      \"created_at\": \"2025-03-11T12:34:56Z\",\n      \"submitted_at\": \"2025-03-11T12:30:00Z\"\n    }\n  ],\n  \"meta\": {\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Create Submission",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": 1,\n  \"title\": \"Two Sum\",\n  \"title-slug\": \"two-sum\",\n  \"submitted_at\": \"2025-03-11T12:30:00Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/submissions/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"submissions",
								"create"
							]
						},
						"description": "Create a new submission"
					},
					"response": [
						{
							"name": "Create Submission Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": 1,\n  \"title\": \"Two Sum\",\n  \"title-slug\": \"two-sum\",\n  \"submitted_at\": \"2025-03-11T12:30:00Z\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/submissions/create",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"submissions",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"internal-user-123abc\",\n    \"user_id\": 1,\n    \"title\": \"Two Sum\",\n    \"title_slug\": \"two-sum\",\n    \"created_at\": \"2025-03-11T12:34:56Z\",\n    \"submitted_at\": \"2025-03-11T12:30:00Z\"\n  },\n  \"meta\": {\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Get Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/reviews?user_id=1&status=all&page=1&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reviews"
							],
							"query": [
								{
									"key": "user_id",
									"value": "1"
								},
								{
									"key": "status",
									"value": "all",
									"description": "Options: all, due, upcoming"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Get reviews for a user with optional status filter and pagination"
					},
					"response": [
						{
							"name": "Get All Reviews Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/reviews?user_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "user_id",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"submission_id\": \"internal-user-123abc\",\n      \"next_review_at\": \"2025-03-10T12:34:56Z\",\n      \"created_at\": \"2025-03-09T12:34:56Z\",\n      \"stability\": 3.0,\n      \"difficulty\": 5.0,\n      \"elapsed_days\": 0,\n      \"scheduled_days\": 1,\n      \"reps\": 1,\n      \"lapses\": 0,\n      \"state\": 2,\n      \"last_review\": \"2025-03-09T12:34:56Z\"\n    },\n    {\n      \"id\": 2,\n      \"submission_id\": \"internal-user-456def\",\n      \"next_review_at\": \"2025-03-12T12:34:56Z\",\n      \"created_at\": \"2025-03-09T12:34:56Z\",\n      \"stability\": 3.0,\n      \"difficulty\": 5.0,\n      \"elapsed_days\": 0,\n      \"scheduled_days\": 3,\n      \"reps\": 1,\n      \"lapses\": 0,\n      \"state\": 2,\n      \"last_review\": \"2025-03-09T12:34:56Z\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 25,\n      \"page\": 1,\n      \"per_page\": 10\n    },\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						},
						{
							"name": "Get Due Reviews Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/reviews?user_id=1&status=due",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "user_id",
											"value": "1"
										},
										{
											"key": "status",
											"value": "due"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"submission_id\": \"internal-user-123abc\",\n      \"next_review_at\": \"2025-03-10T12:34:56Z\",\n      \"created_at\": \"2025-03-09T12:34:56Z\",\n      \"stability\": 3.0,\n      \"difficulty\": 5.0,\n      \"elapsed_days\": 0,\n      \"scheduled_days\": 1,\n      \"reps\": 1,\n      \"lapses\": 0,\n      \"state\": 2,\n      \"last_review\": \"2025-03-09T12:34:56Z\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 5,\n      \"page\": 1,\n      \"per_page\": 10\n    },\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						},
						{
							"name": "Get Upcoming Reviews Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/reviews?user_id=1&status=upcoming",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "user_id",
											"value": "1"
										},
										{
											"key": "status",
											"value": "upcoming"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": 2,\n      \"submission_id\": \"internal-user-456def\",\n      \"next_review_at\": \"2025-03-12T12:34:56Z\",\n      \"created_at\": \"2025-03-09T12:34:56Z\",\n      \"stability\": 3.0,\n      \"difficulty\": 5.0,\n      \"elapsed_days\": 0,\n      \"scheduled_days\": 3,\n      \"reps\": 1,\n      \"lapses\": 0,\n      \"state\": 2,\n      \"last_review\": \"2025-03-09T12:34:56Z\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 20,\n      \"page\": 1,\n      \"per_page\": 10\n    },\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Create Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"submission_id\": \"internal-user-123abc\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/reviews",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reviews"
							]
						},
						"description": "Create a new review schedule for a submission"
					},
					"response": [
						{
							"name": "Create Review Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"submission_id\": \"internal-user-123abc\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/reviews",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"reviews"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": 1\n  },\n  \"meta\": {\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Update Review",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"review_id\": 1,\n  \"rating\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/reviews",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reviews"
							]
						},
						"description": "Update a review with a rating (1=Again, 2=Hard, 3=Good, 4=Easy)"
					},
					"response": [
						{
							"name": "Update Review Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"review_id\": 1,\n  \"rating\": 3\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/reviews",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"reviews"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"success\": true,\n    \"next_review_at\": \"2025-03-14T12:34:56Z\",\n    \"days_until_review\": 3\n  },\n  \"meta\": {\n    \"timestamp\": \"2025-03-11T12:34:56Z\"\n  },\n  \"errors\": []\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}