create table "public"."deck_problems" (
    "created_at" timestamp with time zone not null default now(),
    "problem_id" integer not null,
    "deck_id" integer not null
);


alter table "public"."deck_problems" enable row level security;

create table "public"."decks" (
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "description" text,
    "is_public" boolean default false,
    "user_id" uuid 
    "id" integer generated by default as identity not null
);


alter table "public"."decks" enable row level security;

create table "public"."flashcard_review_logs" (
    "id" integer not null default nextval('review_logs_id_seq'::regclass),
    "rating" smallint not null,
    "review_date" timestamp without time zone not null default CURRENT_TIMESTAMP,
    "elapsed_days" integer not null,
    "scheduled_days" integer not null,
    "state" smallint not null,
    "flashcard_review_id" integer not null
);


create table "public"."flashcard_reviews" (
    "id" integer not null default nextval('review_schedules_id_seq'::regclass),
    "next_review_at" timestamp without time zone not null,
    "created_at" timestamp without time zone default CURRENT_TIMESTAMP,
    "stability" double precision default 0.0,
    "difficulty" double precision default 0.0,
    "elapsed_days" integer default 0,
    "scheduled_days" integer default 0,
    "reps" integer default 0,
    "lapses" integer default 0,
    "state" smallint default 0,
    "last_review" timestamp without time zone,
    "problem_id" integer not null,
    "user_id" uuid not null default gen_random_uuid(),
    "deck_id" integer
);


create table "public"."problems_topic" (
    "problem_id" integer not null,
    "topic_slug" text not null
);


alter table "public"."problems" add column "solution_approach" text;

CREATE UNIQUE INDEX deck_problems_pkey ON public.deck_problems USING btree (problem_id, deck_id);

CREATE UNIQUE INDEX decks_pkey ON public.decks USING btree (id);

CREATE UNIQUE INDEX flashcard_review_logs_pkey ON public.flashcard_review_logs USING btree (id);

CREATE UNIQUE INDEX flashcard_reviews_pkey ON public.flashcard_reviews USING btree (id);

CREATE UNIQUE INDEX problems_topic_pkey ON public.problems_topic USING btree (problem_id, topic_slug);

alter table "public"."deck_problems" add constraint "deck_problems_pkey" PRIMARY KEY using index "deck_problems_pkey";

alter table "public"."decks" add constraint "decks_pkey" PRIMARY KEY using index "decks_pkey";

alter table "public"."flashcard_review_logs" add constraint "flashcard_review_logs_pkey" PRIMARY KEY using index "flashcard_review_logs_pkey";

alter table "public"."flashcard_reviews" add constraint "flashcard_reviews_pkey" PRIMARY KEY using index "flashcard_reviews_pkey";

alter table "public"."problems_topic" add constraint "problems_topic_pkey" PRIMARY KEY using index "problems_topic_pkey";

alter table "public"."deck_problems" add constraint "deck_problems_deck_id_fkey" FOREIGN KEY (deck_id) REFERENCES decks(id) ON DELETE CASCADE not valid;

alter table "public"."deck_problems" validate constraint "deck_problems_deck_id_fkey";

alter table "public"."deck_problems" add constraint "deck_problems_problem_id_fkey" FOREIGN KEY (problem_id) REFERENCES problems(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."deck_problems" validate constraint "deck_problems_problem_id_fkey";

alter table "public"."decks" add constraint "decks_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."decks" validate constraint "decks_user_id_fkey";

alter table "public"."flashcard_review_logs" add constraint "flashcard_review_logs_flashcard_review_id_fkey" FOREIGN KEY (flashcard_review_id) REFERENCES flashcard_reviews(id) ON DELETE CASCADE not valid;

alter table "public"."flashcard_review_logs" validate constraint "flashcard_review_logs_flashcard_review_id_fkey";

alter table "public"."flashcard_review_logs" add constraint "review_logs_rating_check" CHECK ((rating = ANY (ARRAY[1, 2, 3, 4]))) not valid;

alter table "public"."flashcard_review_logs" validate constraint "review_logs_rating_check";

alter table "public"."flashcard_review_logs" add constraint "review_logs_state_check" CHECK ((state = ANY (ARRAY[0, 1, 2, 3]))) not valid;

alter table "public"."flashcard_review_logs" validate constraint "review_logs_state_check";

alter table "public"."flashcard_reviews" add constraint "flashcard_reviews_problem_id_fkey" FOREIGN KEY (problem_id) REFERENCES problems(id) not valid;

alter table "public"."flashcard_reviews" validate constraint "flashcard_reviews_problem_id_fkey";

alter table "public"."flashcard_reviews" add constraint "flashcard_reviews_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."flashcard_reviews" validate constraint "flashcard_reviews_user_id_fkey";

alter table "public"."problems_topic" add constraint "problems_topic_problem_id_fkey" FOREIGN KEY (problem_id) REFERENCES problems(id) not valid;

alter table "public"."problems_topic" validate constraint "problems_topic_problem_id_fkey";

grant delete on table "public"."deck_problems" to "anon";

grant insert on table "public"."deck_problems" to "anon";

grant references on table "public"."deck_problems" to "anon";

grant select on table "public"."deck_problems" to "anon";

grant trigger on table "public"."deck_problems" to "anon";

grant truncate on table "public"."deck_problems" to "anon";

grant update on table "public"."deck_problems" to "anon";

grant delete on table "public"."deck_problems" to "authenticated";

grant insert on table "public"."deck_problems" to "authenticated";

grant references on table "public"."deck_problems" to "authenticated";

grant select on table "public"."deck_problems" to "authenticated";

grant trigger on table "public"."deck_problems" to "authenticated";

grant truncate on table "public"."deck_problems" to "authenticated";

grant update on table "public"."deck_problems" to "authenticated";

grant delete on table "public"."deck_problems" to "service_role";

grant insert on table "public"."deck_problems" to "service_role";

grant references on table "public"."deck_problems" to "service_role";

grant select on table "public"."deck_problems" to "service_role";

grant trigger on table "public"."deck_problems" to "service_role";

grant truncate on table "public"."deck_problems" to "service_role";

grant update on table "public"."deck_problems" to "service_role";

grant delete on table "public"."decks" to "anon";

grant insert on table "public"."decks" to "anon";

grant references on table "public"."decks" to "anon";

grant select on table "public"."decks" to "anon";

grant trigger on table "public"."decks" to "anon";

grant truncate on table "public"."decks" to "anon";

grant update on table "public"."decks" to "anon";

grant delete on table "public"."decks" to "authenticated";

grant insert on table "public"."decks" to "authenticated";

grant references on table "public"."decks" to "authenticated";

grant select on table "public"."decks" to "authenticated";

grant trigger on table "public"."decks" to "authenticated";

grant truncate on table "public"."decks" to "authenticated";

grant update on table "public"."decks" to "authenticated";

grant delete on table "public"."decks" to "service_role";

grant insert on table "public"."decks" to "service_role";

grant references on table "public"."decks" to "service_role";

grant select on table "public"."decks" to "service_role";

grant trigger on table "public"."decks" to "service_role";

grant truncate on table "public"."decks" to "service_role";

grant update on table "public"."decks" to "service_role";

grant delete on table "public"."flashcard_review_logs" to "anon";

grant insert on table "public"."flashcard_review_logs" to "anon";

grant references on table "public"."flashcard_review_logs" to "anon";

grant select on table "public"."flashcard_review_logs" to "anon";

grant trigger on table "public"."flashcard_review_logs" to "anon";

grant truncate on table "public"."flashcard_review_logs" to "anon";

grant update on table "public"."flashcard_review_logs" to "anon";

grant delete on table "public"."flashcard_review_logs" to "authenticated";

grant insert on table "public"."flashcard_review_logs" to "authenticated";

grant references on table "public"."flashcard_review_logs" to "authenticated";

grant select on table "public"."flashcard_review_logs" to "authenticated";

grant trigger on table "public"."flashcard_review_logs" to "authenticated";

grant truncate on table "public"."flashcard_review_logs" to "authenticated";

grant update on table "public"."flashcard_review_logs" to "authenticated";

grant delete on table "public"."flashcard_review_logs" to "service_role";

grant insert on table "public"."flashcard_review_logs" to "service_role";

grant references on table "public"."flashcard_review_logs" to "service_role";

grant select on table "public"."flashcard_review_logs" to "service_role";

grant trigger on table "public"."flashcard_review_logs" to "service_role";

grant truncate on table "public"."flashcard_review_logs" to "service_role";

grant update on table "public"."flashcard_review_logs" to "service_role";

grant delete on table "public"."flashcard_reviews" to "anon";

grant insert on table "public"."flashcard_reviews" to "anon";

grant references on table "public"."flashcard_reviews" to "anon";

grant select on table "public"."flashcard_reviews" to "anon";

grant trigger on table "public"."flashcard_reviews" to "anon";

grant truncate on table "public"."flashcard_reviews" to "anon";

grant update on table "public"."flashcard_reviews" to "anon";

grant delete on table "public"."flashcard_reviews" to "authenticated";

grant insert on table "public"."flashcard_reviews" to "authenticated";

grant references on table "public"."flashcard_reviews" to "authenticated";

grant select on table "public"."flashcard_reviews" to "authenticated";

grant trigger on table "public"."flashcard_reviews" to "authenticated";

grant truncate on table "public"."flashcard_reviews" to "authenticated";

grant update on table "public"."flashcard_reviews" to "authenticated";

grant delete on table "public"."flashcard_reviews" to "service_role";

grant insert on table "public"."flashcard_reviews" to "service_role";

grant references on table "public"."flashcard_reviews" to "service_role";

grant select on table "public"."flashcard_reviews" to "service_role";

grant trigger on table "public"."flashcard_reviews" to "service_role";

grant truncate on table "public"."flashcard_reviews" to "service_role";

grant update on table "public"."flashcard_reviews" to "service_role";

grant delete on table "public"."problems_topic" to "anon";

grant insert on table "public"."problems_topic" to "anon";

grant references on table "public"."problems_topic" to "anon";

grant select on table "public"."problems_topic" to "anon";

grant trigger on table "public"."problems_topic" to "anon";

grant truncate on table "public"."problems_topic" to "anon";

grant update on table "public"."problems_topic" to "anon";

grant delete on table "public"."problems_topic" to "authenticated";

grant insert on table "public"."problems_topic" to "authenticated";

grant references on table "public"."problems_topic" to "authenticated";

grant select on table "public"."problems_topic" to "authenticated";

grant trigger on table "public"."problems_topic" to "authenticated";

grant truncate on table "public"."problems_topic" to "authenticated";

grant update on table "public"."problems_topic" to "authenticated";

grant delete on table "public"."problems_topic" to "service_role";

grant insert on table "public"."problems_topic" to "service_role";

grant references on table "public"."problems_topic" to "service_role";

grant select on table "public"."problems_topic" to "service_role";

grant trigger on table "public"."problems_topic" to "service_role";

grant truncate on table "public"."problems_topic" to "service_role";

grant update on table "public"."problems_topic" to "service_role";


